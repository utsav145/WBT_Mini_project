{"ast":null,"code":"const API_URL = 'http://localhost:5000/api';\nexport const hireService = {\n  // Send a hire request\n  sendHireRequest: async (employeeId, message) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n    const response = await fetch(`${API_URL}/hire-requests`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        employeeId,\n        message\n      })\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || 'Failed to send hire request');\n    }\n    return response.json();\n  },\n  // Get all hire requests for current user\n  getMyRequests: async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n    const response = await fetch(`${API_URL}/hire-requests/my-requests`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || 'Failed to fetch hire requests');\n    }\n    return response.json();\n  },\n  // Update hire request status\n  updateRequestStatus: async (requestId, status) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n    const response = await fetch(`${API_URL}/hire-requests/${requestId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        status\n      })\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || 'Failed to update hire request');\n    }\n    return response.json();\n  }\n};","map":{"version":3,"names":["API_URL","hireService","sendHireRequest","employeeId","message","token","localStorage","getItem","Error","response","fetch","method","headers","body","JSON","stringify","ok","error","json","getMyRequests","updateRequestStatus","requestId","status"],"sources":["C:/Users/avgav/Downloads/DBT Kit for CDAC Mumbai/DBT Kit for CDAC Mumbai/MySQL - SQL - Assignments/Skill_sharing_app/client/src/services/hireService.js"],"sourcesContent":["const API_URL = 'http://localhost:5000/api';\r\n\r\nexport const hireService = {\r\n  // Send a hire request\r\n  sendHireRequest: async (employeeId, message) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      throw new Error('No authentication token found');\r\n    }\r\n\r\n    const response = await fetch(`${API_URL}/hire-requests`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({ employeeId, message })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json();\r\n      throw new Error(error.message || 'Failed to send hire request');\r\n    }\r\n    return response.json();\r\n  },\r\n\r\n  // Get all hire requests for current user\r\n  getMyRequests: async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      throw new Error('No authentication token found');\r\n    }\r\n\r\n    const response = await fetch(`${API_URL}/hire-requests/my-requests`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json();\r\n      throw new Error(error.message || 'Failed to fetch hire requests');\r\n    }\r\n    return response.json();\r\n  },\r\n\r\n  // Update hire request status\r\n  updateRequestStatus: async (requestId, status) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      throw new Error('No authentication token found');\r\n    }\r\n\r\n    const response = await fetch(`${API_URL}/hire-requests/${requestId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({ status })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json();\r\n      throw new Error(error.message || 'Failed to update hire request');\r\n    }\r\n    return response.json();\r\n  }\r\n}; "],"mappings":"AAAA,MAAMA,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,WAAW,GAAG;EACzB;EACAC,eAAe,EAAE,MAAAA,CAAOC,UAAU,EAAEC,OAAO,KAAK;IAC9C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACV,MAAM,IAAIG,KAAK,CAAC,+BAA+B,CAAC;IAClD;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,gBAAgB,EAAE;MACvDW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUP,KAAK;MAClC,CAAC;MACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,UAAU;QAAEC;MAAQ,CAAC;IAC9C,CAAC,CAAC;IAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACnC,MAAM,IAAIV,KAAK,CAACS,KAAK,CAACb,OAAO,IAAI,6BAA6B,CAAC;IACjE;IACA,OAAOK,QAAQ,CAACS,IAAI,CAAC,CAAC;EACxB,CAAC;EAED;EACAC,aAAa,EAAE,MAAAA,CAAA,KAAY;IACzB,MAAMd,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACV,MAAM,IAAIG,KAAK,CAAC,+BAA+B,CAAC;IAClD;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,4BAA4B,EAAE;MACnEY,OAAO,EAAE;QACP,eAAe,EAAE,UAAUP,KAAK;MAClC;IACF,CAAC,CAAC;IAEF,IAAI,CAACI,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACnC,MAAM,IAAIV,KAAK,CAACS,KAAK,CAACb,OAAO,IAAI,+BAA+B,CAAC;IACnE;IACA,OAAOK,QAAQ,CAACS,IAAI,CAAC,CAAC;EACxB,CAAC;EAED;EACAE,mBAAmB,EAAE,MAAAA,CAAOC,SAAS,EAAEC,MAAM,KAAK;IAChD,MAAMjB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACV,MAAM,IAAIG,KAAK,CAAC,+BAA+B,CAAC;IAClD;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,kBAAkBqB,SAAS,EAAE,EAAE;MACpEV,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUP,KAAK;MAClC,CAAC;MACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEO;MAAO,CAAC;IACjC,CAAC,CAAC;IAEF,IAAI,CAACb,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACnC,MAAM,IAAIV,KAAK,CAACS,KAAK,CAACb,OAAO,IAAI,+BAA+B,CAAC;IACnE;IACA,OAAOK,QAAQ,CAACS,IAAI,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}