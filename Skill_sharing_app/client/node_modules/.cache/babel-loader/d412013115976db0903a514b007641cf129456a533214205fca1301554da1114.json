{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avgav\\\\Downloads\\\\DBT Kit for CDAC Mumbai\\\\DBT Kit for CDAC Mumbai\\\\MySQL - SQL - Assignments\\\\Skill_sharing_app\\\\client\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const storedUser = localStorage.getItem('user');\n        if (token && storedUser) {\n          // Verify token and get fresh user data\n          const userData = await authApi.getCurrentUser();\n          setUser(userData);\n        }\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n        // Clear invalid data\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      const data = await authApi.login(credentials);\n      setUser(data.user);\n      return data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const data = await authApi.register(userData);\n      setUser(data.user);\n      return data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    // Clear all auth-related data\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('userProfile');\n    setUser(null);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authApi","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","initializeAuth","token","localStorage","getItem","storedUser","userData","getCurrentUser","error","console","removeItem","login","credentials","data","register","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/avgav/Downloads/DBT Kit for CDAC Mumbai/DBT Kit for CDAC Mumbai/MySQL - SQL - Assignments/Skill_sharing_app/client/src/contexts/AuthContext.jsx"],"sourcesContent":["// src/contexts/AuthContext.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authApi } from '../services/api';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n\n        if (token && storedUser) {\n          // Verify token and get fresh user data\n          const userData = await authApi.getCurrentUser();\n    setUser(userData);\n        }\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n        // Clear invalid data\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const data = await authApi.login(credentials);\n      setUser(data.user);\n      return data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const data = await authApi.register(userData);\n      setUser(data.user);\n      return data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    // Clear all auth-related data\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('userProfile');\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}