{"ast":null,"code":"// client/src/api.js\nimport axios from 'axios';\nconst API_BASE = 'http://localhost:5000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const register = async form => {\n  try {\n    const res = await api.post('/register', {\n      name: form.name,\n      email: form.email,\n      password: form.password,\n      confirmPassword: form.confirmPassword\n    });\n    return res;\n  } catch (err) {\n    if (err.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      throw new Error(err.response.data.msg || 'Registration failed');\n    } else if (err.request) {\n      // The request was made but no response was received\n      throw new Error('No response from server. Please check your connection.');\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      throw new Error('Error setting up request');\n    }\n  }\n};\nexport const login = async form => {\n  try {\n    const res = await api.post('/login', {\n      email: form.email,\n      password: form.password\n    });\n    // Store userId in localStorage\n    if (res.data.userId) {\n      localStorage.setItem('userId', res.data.userId);\n    }\n    return res;\n  } catch (err) {\n    if (err.response) {\n      throw new Error(err.response.data.msg || 'Login failed');\n    } else if (err.request) {\n      throw new Error('No response from server. Please check your connection.');\n    } else {\n      throw new Error('Error setting up request');\n    }\n  }\n};","map":{"version":3,"names":["axios","API_BASE","api","create","baseURL","headers","register","form","res","post","name","email","password","confirmPassword","err","response","Error","data","msg","request","login","userId","localStorage","setItem"],"sources":["C:/Users/avgav/Downloads/DBT Kit for CDAC Mumbai/DBT Kit for CDAC Mumbai/MySQL - SQL - Assignments/Skill_sharing_app/client/src/api.js"],"sourcesContent":["// client/src/api.js\r\nimport axios from 'axios';\r\n\r\nconst API_BASE = 'http://localhost:5000/api';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_BASE,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport const register = async (form) => {\r\n  try {\r\n    const res = await api.post('/register', {\r\n      name: form.name,\r\n      email: form.email,\r\n      password: form.password,\r\n      confirmPassword: form.confirmPassword\r\n    });\r\n    return res;\r\n  } catch (err) {\r\n    if (err.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      throw new Error(err.response.data.msg || 'Registration failed');\r\n    } else if (err.request) {\r\n      // The request was made but no response was received\r\n      throw new Error('No response from server. Please check your connection.');\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      throw new Error('Error setting up request');\r\n    }\r\n  }\r\n};\r\n\r\nexport const login = async (form) => {\r\n  try {\r\n    const res = await api.post('/login', {\r\n      email: form.email,\r\n      password: form.password\r\n    });\r\n    // Store userId in localStorage\r\n    if (res.data.userId) {\r\n      localStorage.setItem('userId', res.data.userId);\r\n    }\r\n    return res;\r\n  } catch (err) {\r\n    if (err.response) {\r\n      throw new Error(err.response.data.msg || 'Login failed');\r\n    } else if (err.request) {\r\n      throw new Error('No response from server. Please check your connection.');\r\n    } else {\r\n      throw new Error('Error setting up request');\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,2BAA2B;;AAE5C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAG,MAAOC,IAAI,IAAK;EACtC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,WAAW,EAAE;MACtCC,IAAI,EAAEH,IAAI,CAACG,IAAI;MACfC,KAAK,EAAEJ,IAAI,CAACI,KAAK;MACjBC,QAAQ,EAAEL,IAAI,CAACK,QAAQ;MACvBC,eAAe,EAAEN,IAAI,CAACM;IACxB,CAAC,CAAC;IACF,OAAOL,GAAG;EACZ,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZ,IAAIA,GAAG,CAACC,QAAQ,EAAE;MAChB;MACA;MACA,MAAM,IAAIC,KAAK,CAACF,GAAG,CAACC,QAAQ,CAACE,IAAI,CAACC,GAAG,IAAI,qBAAqB,CAAC;IACjE,CAAC,MAAM,IAAIJ,GAAG,CAACK,OAAO,EAAE;MACtB;MACA,MAAM,IAAIH,KAAK,CAAC,wDAAwD,CAAC;IAC3E,CAAC,MAAM;MACL;MACA,MAAM,IAAIA,KAAK,CAAC,0BAA0B,CAAC;IAC7C;EACF;AACF,CAAC;AAED,OAAO,MAAMI,KAAK,GAAG,MAAOb,IAAI,IAAK;EACnC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,QAAQ,EAAE;MACnCE,KAAK,EAAEJ,IAAI,CAACI,KAAK;MACjBC,QAAQ,EAAEL,IAAI,CAACK;IACjB,CAAC,CAAC;IACF;IACA,IAAIJ,GAAG,CAACS,IAAI,CAACI,MAAM,EAAE;MACnBC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEf,GAAG,CAACS,IAAI,CAACI,MAAM,CAAC;IACjD;IACA,OAAOb,GAAG;EACZ,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZ,IAAIA,GAAG,CAACC,QAAQ,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACF,GAAG,CAACC,QAAQ,CAACE,IAAI,CAACC,GAAG,IAAI,cAAc,CAAC;IAC1D,CAAC,MAAM,IAAIJ,GAAG,CAACK,OAAO,EAAE;MACtB,MAAM,IAAIH,KAAK,CAAC,wDAAwD,CAAC;IAC3E,CAAC,MAAM;MACL,MAAM,IAAIA,KAAK,CAAC,0BAA0B,CAAC;IAC7C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}